PHP是一门动态web语言。
这就允许php传入的变量类型可以是任意类型：例如数组、对象、整型、浮点、布尔、字符串等。
1、php开发中的典型MVC模型，应该是重Model轻控制器。控制器应该只作为一个路由的功能。
原因如下：一个完整的web访问流为：用户打开浏览器->在搜索引擎输入网址->网址经过DNS解析到具体ip->根据ip选择webserver->
Webserver根据请求进行回应1->访问静态页面->直接返回;2访问动态页面->经过php等动态语言进行处理->1有数据库访问需求->
通过model访问数据库读取数据、或者写入数据后，返回数据到控制器->渲染页面返回；2无数据库访问需求->控制器直接作为路由功能调用
相应的模板文件返回。在这个过程中，控制器是必须要作为路由使用，而model则是按需加载，所以要提高页面的访问速度，应该尽量将
复杂的业务逻辑放在model，轻量化控制器以达到响应迅速的效果。

2、关于异步编程的效果与目标
在很多涉及到表单提交的地方，基本都需要进行页面跳转或者局部请求。如果区分二者？
对于有大量数据提交的地方，一定需要进行表单提交流程，即页面跳转。一方面可以保证一次提交数据的完整性，另外也可以防止重复二次提交或者伪造
表单提交。
a、对于有状态流变更的地方、或者只需要提交比如id加状态流的地方，则尽量使用ajax提交。
b、对于状态流的变化，在服务端一定要进行新状态与旧状态的匹配，例如：
SET disable = 1 FROM tablename WHERE id='{$id}' AND disable = 0;
凡是有状态变更的地方，都需要与前置状态进行比对以防止重复提交或者无效SQL；
c、一次ajax请求必然要有请求与响应，如果对请求内容本身要进行判断，可以嵌套ajax请求。
